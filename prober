#!/usr/bin/python

import sys, time, easysnmp
import math
from easysnmp import Session,snmp_get,snmp_walk
#imports functions like snmp_get 

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#
agent_details = sys.argv[1]
#getting agent details with help of seperator
selcted_details = agent_details.split(':')
agent_ip_addr = selcted_details[0]
agent_ip_port = selcted_details[1]
agent_comm_name = selcted_details[2]
sample_frq = float(sys.argv[2])
total_samples = int(sys.argv[3])
#time calclutaed from frequency of the sample
sample_time = 1/sample_frq 
#oid markings
oids = []
latest_oid = []
#first list
past_oid = []
#second_list

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#

for identifiers in range(4,len(sys.argv)): 
	oids.append(sys.argv[identifiers])
oids.insert(0,'1.3.6.1.2.1.1.3.0')

#%%%%%%counting oids given in CL%%%%%#

def snmp_prober():
	global latest_oid, current_time
	#%%%%global declaration%%%%%%%%%%# 
	session=Session(hostname=agent_ip_addr,remote_port=agent_ip_port,community='public',version=2,timeout=1,retries=1) #snmp get -v2c -c -Onvt
	oids_fedback = session.get(oids)
	past_oid=[]
	

	for j in range(1,len(oids_fedback)):
		if oids_fedback[j].value!='NOSUCHOBJECT' and oids_fedback[j].value!='NOSUCHINSTANCE':
			past_oid.append(int(oids_fedback[j].value))
			
			if count!=0 and len(latest_oid)>0:
				difference_in_oid = int(past_oid[j-1]) - int(latest_oid[j-1])
				#rounding of to nearest deceimal value
				difference_in_time = round(past_time-current_time,1)
				my_rate = int(difference_in_oid / difference_in_time)
				if my_rate < 0 :
					if oids_fedback[j].snmp_type == 'COUNTER32': 
						#for 32-bit counter
						difference_in_oid = difference_in_oid + 2**32
						print(str(past_time) +"|"+ str(difference_in_oid / difference_in_time) +"|")
					elif oids_fedback[j].snmp_type == 'COUNTER64':
						#for 64-bit counter
						difference_in_oid = difference_in_oid + 2**64
						print(str(past_time) +"|"+ str(difference_in_oid / difference_in_time) +"|")
				else:
					print(str(past_time) +"|"+ str(my_rate) +"|")

	latest_oid = past_oid
	current_time = past_time
	#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#


if total_samples==-1:
	count=0
	latest_oid=[]
	while True:
		past_time = (time.time())
		snmp_prober()
		time_response = (time.time())
		count = count+1
		time.sleep(abs(sample_time - time_response + past_time))
else:
	latest_oid = []
	for count in range(0,total_samples+1):
		past_time = (time.time())
		snmp_prober()
		time_response = (time.time())
		time.sleep(abs(sample_time - time_response + past_time))
		
